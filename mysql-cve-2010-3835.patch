Back-ported patch for upstream bug #55564.


diff -Naur mysql-5.0.77.orig/mysql-test/r/user_var.result mysql-5.0.77/mysql-test/r/user_var.result
--- mysql-5.0.77.orig/mysql-test/r/user_var.result	2009-01-29 17:38:26.000000000 -0500
+++ mysql-5.0.77/mysql-test/r/user_var.result	2010-10-22 15:28:43.106863983 -0400
@@ -353,3 +353,21 @@
 2.6	1
 1.6	4
 drop table t1;
+CREATE TABLE t1(a INT);
+INSERT INTO t1 VALUES (0),(0);
+# BUG#55615 : should not crash
+SELECT (@a:=(SELECT @a:=1 FROM t1 LIMIT 1)) AND COUNT(1) FROM t1 GROUP BY @a;
+(@a:=(SELECT @a:=1 FROM t1 LIMIT 1)) AND COUNT(1)
+1
+1
+# BUG#55564 : should not crash
+SELECT IF(
+@v:=LEAST((SELECT 1 FROM t1 t2 LEFT JOIN t1 ON (@v) GROUP BY t1.a), a),
+count(*), 1) 
+FROM t1 GROUP BY a LIMIT 1;
+IF(
+@v:=LEAST((SELECT 1 FROM t1 t2 LEFT JOIN t1 ON (@v) GROUP BY t1.a), a),
+count(*), 1)
+1
+DROP TABLE t1;
+End of 5.1 tests
diff -Naur mysql-5.0.77.orig/mysql-test/t/user_var.test mysql-5.0.77/mysql-test/t/user_var.test
--- mysql-5.0.77.orig/mysql-test/t/user_var.test	2009-01-29 17:38:02.000000000 -0500
+++ mysql-5.0.77/mysql-test/t/user_var.test	2010-10-22 15:29:10.949920318 -0400
@@ -237,3 +237,23 @@
 select @a:=f3, count(f3) from t1 group by 1 desc;
 select @a:=f4, count(f4) from t1 group by 1 desc;
 drop table t1;
+
+#
+# Bug #55615: debug assertion after using variable in assignment and
+# referred to
+# Bug #55564: crash with user variables, assignments, joins...
+#
+
+CREATE TABLE t1(a INT);
+INSERT INTO t1 VALUES (0),(0);
+--echo # BUG#55615 : should not crash
+SELECT (@a:=(SELECT @a:=1 FROM t1 LIMIT 1)) AND COUNT(1) FROM t1 GROUP BY @a;
+--echo # BUG#55564 : should not crash
+SELECT IF(
+  @v:=LEAST((SELECT 1 FROM t1 t2 LEFT JOIN t1 ON (@v) GROUP BY t1.a), a),
+  count(*), 1) 
+FROM t1 GROUP BY a LIMIT 1;
+
+DROP TABLE t1;
+
+--echo End of 5.1 tests
diff -Naur mysql-5.0.77.orig/sql/item_func.cc mysql-5.0.77/sql/item_func.cc
--- mysql-5.0.77.orig/sql/item_func.cc	2009-01-29 16:45:26.000000000 -0500
+++ mysql-5.0.77/sql/item_func.cc	2010-10-22 15:27:56.902989584 -0400
@@ -4267,6 +4267,14 @@
   return entry->val_int(&null_value);
 }
 
+bool Item_func_set_user_var::val_bool_result()
+{
+  DBUG_ASSERT(fixed == 1);
+  check(TRUE);
+  update();					// Store expression
+  return entry->val_int(&null_value) != 0;
+}
+
 String *Item_func_set_user_var::str_result(String *str)
 {
   DBUG_ASSERT(fixed == 1);
diff -Naur mysql-5.0.77.orig/sql/item_func.h mysql-5.0.77/sql/item_func.h
--- mysql-5.0.77.orig/sql/item_func.h	2009-01-29 16:45:26.000000000 -0500
+++ mysql-5.0.77/sql/item_func.h	2010-10-22 15:27:56.903989795 -0400
@@ -1300,6 +1300,7 @@
   my_decimal *val_decimal(my_decimal *);
   double val_result();
   longlong val_int_result();
+  bool val_bool_result();
   String *str_result(String *str);
   my_decimal *val_decimal_result(my_decimal *);
   bool update_hash(void *ptr, uint length, enum Item_result type,
