Back-ported patch for upstream bug #54007.


diff -Naur mysql-5.0.77.orig/mysql-test/r/handler.result mysql-5.0.77/mysql-test/r/handler.result
--- mysql-5.0.77.orig/mysql-test/r/handler.result	2009-01-29 17:38:15.000000000 -0500
+++ mysql-5.0.77/mysql-test/r/handler.result	2010-08-30 22:10:01.567366306 -0400
@@ -502,3 +502,93 @@
 ERROR 42S22: Unknown column 'inexistent' in 'field list'
 handler t1_alias close;
 drop table t1;
+CREATE TABLE t1(a INT, b INT, PRIMARY KEY(a), KEY b(b), KEY ab(a, b));
+HANDLER t1 OPEN;
+HANDLER t1 READ FIRST;
+a	b
+HANDLER t1 READ `PRIMARY` NEXT;
+a	b
+HANDLER t1 READ ab NEXT;
+a	b
+HANDLER t1 READ b NEXT;
+a	b
+HANDLER t1 READ NEXT;
+a	b
+HANDLER t1 CLOSE;
+INSERT INTO t1 VALUES (2, 20), (1, 10), (4, 40), (3, 30);
+HANDLER t1 OPEN;
+HANDLER t1 READ FIRST;
+a	b
+2	20
+HANDLER t1 READ NEXT;
+a	b
+1	10
+HANDLER t1 READ `PRIMARY` NEXT;
+a	b
+1	10
+HANDLER t1 READ `PRIMARY` NEXT;
+a	b
+2	20
+HANDLER t1 READ ab NEXT;
+a	b
+1	10
+HANDLER t1 READ ab NEXT;
+a	b
+2	20
+HANDLER t1 READ b NEXT;
+a	b
+1	10
+HANDLER t1 READ b NEXT;
+a	b
+2	20
+HANDLER t1 READ b NEXT;
+a	b
+3	30
+HANDLER t1 READ b NEXT;
+a	b
+4	40
+HANDLER t1 READ b NEXT;
+a	b
+HANDLER t1 READ NEXT;
+a	b
+4	40
+HANDLER t1 READ NEXT;
+a	b
+3	30
+HANDLER t1 READ NEXT;
+a	b
+HANDLER t1 CLOSE;
+HANDLER t1 OPEN;
+HANDLER t1 READ FIRST;
+a	b
+2	20
+HANDLER t1 READ `PRIMARY` PREV;
+a	b
+4	40
+HANDLER t1 READ `PRIMARY` PREV;
+a	b
+3	30
+HANDLER t1 READ b PREV;
+a	b
+4	40
+HANDLER t1 READ b PREV;
+a	b
+3	30
+HANDLER t1 CLOSE;
+HANDLER t1 OPEN;
+HANDLER t1 READ FIRST;
+a	b
+2	20
+HANDLER t1 READ `PRIMARY` PREV LIMIT 3;
+a	b
+4	40
+3	30
+2	20
+HANDLER t1 READ b NEXT LIMIT 5;
+a	b
+1	10
+2	20
+3	30
+4	40
+HANDLER t1 CLOSE;
+DROP TABLE t1;
diff -Naur mysql-5.0.77.orig/mysql-test/t/handler.test mysql-5.0.77/mysql-test/t/handler.test
--- mysql-5.0.77.orig/mysql-test/t/handler.test	2009-01-29 17:37:51.000000000 -0500
+++ mysql-5.0.77/mysql-test/t/handler.test	2010-08-30 22:09:16.605366898 -0400
@@ -460,3 +460,50 @@
 handler t1_alias READ a next where inexistent > 0;
 handler t1_alias close;
 drop table t1;
+
+#
+# Bug #54007: assert in ha_myisam::index_next , HANDLER
+#
+CREATE TABLE t1(a INT, b INT, PRIMARY KEY(a), KEY b(b), KEY ab(a, b));
+
+HANDLER t1 OPEN;
+HANDLER t1 READ FIRST;
+HANDLER t1 READ `PRIMARY` NEXT;
+HANDLER t1 READ ab NEXT;
+HANDLER t1 READ b NEXT;
+HANDLER t1 READ NEXT;
+HANDLER t1 CLOSE;
+
+INSERT INTO t1 VALUES (2, 20), (1, 10), (4, 40), (3, 30);
+HANDLER t1 OPEN;
+HANDLER t1 READ FIRST;
+HANDLER t1 READ NEXT;
+HANDLER t1 READ `PRIMARY` NEXT;
+HANDLER t1 READ `PRIMARY` NEXT;
+HANDLER t1 READ ab NEXT;
+HANDLER t1 READ ab NEXT;
+HANDLER t1 READ b NEXT;
+HANDLER t1 READ b NEXT;
+HANDLER t1 READ b NEXT;
+HANDLER t1 READ b NEXT;
+HANDLER t1 READ b NEXT;
+HANDLER t1 READ NEXT;
+HANDLER t1 READ NEXT;
+HANDLER t1 READ NEXT;
+HANDLER t1 CLOSE;
+
+HANDLER t1 OPEN;
+HANDLER t1 READ FIRST;
+HANDLER t1 READ `PRIMARY` PREV;
+HANDLER t1 READ `PRIMARY` PREV;
+HANDLER t1 READ b PREV;
+HANDLER t1 READ b PREV;
+HANDLER t1 CLOSE;
+
+HANDLER t1 OPEN;
+HANDLER t1 READ FIRST;
+HANDLER t1 READ `PRIMARY` PREV LIMIT 3;
+HANDLER t1 READ b NEXT LIMIT 5;
+HANDLER t1 CLOSE;
+
+DROP TABLE t1;
diff -Naur mysql-5.0.77.orig/sql/sql_handler.cc mysql-5.0.77/sql/sql_handler.cc
--- mysql-5.0.77.orig/sql/sql_handler.cc	2009-01-29 16:45:32.000000000 -0500
+++ mysql-5.0.77/sql/sql_handler.cc	2010-08-30 22:07:48.041365795 -0400
@@ -494,6 +494,14 @@
       my_error(ER_KEY_DOES_NOT_EXITS, MYF(0), keyname, tables->alias);
       goto err;
     }
+    /* Check if the same index involved. */
+    if ((uint) keyno != table->file->get_index())
+    {
+      if (mode == RNEXT)
+        mode= RFIRST;
+      else if (mode == RPREV)
+        mode= RLAST;
+    }
   }
 
   if (insert_fields(thd, &thd->lex->select_lex.context,
@@ -516,9 +524,16 @@
     case RNEXT:
       if (table->file->inited != handler::NONE)
       {
-        error=keyname ?
-	  table->file->index_next(table->record[0]) :
-	  table->file->rnd_next(table->record[0]);
+        if (keyname)
+        {
+          /* Check if we read from the same index. */
+          DBUG_ASSERT((uint) keyno == table->file->get_index());
+          error= table->file->index_next(table->record[0]);
+        }
+        else
+        {
+          error= table->file->rnd_next(table->record[0]);
+        }
         break;
       }
       /* else fall through */
@@ -539,6 +554,8 @@
       break;
     case RPREV:
       DBUG_ASSERT(keyname != 0);
+      /* Check if we read from the same index. */
+      DBUG_ASSERT((uint) keyno == table->file->get_index());
       if (table->file->inited != handler::NONE)
       {
         error=table->file->index_prev(table->record[0]);
