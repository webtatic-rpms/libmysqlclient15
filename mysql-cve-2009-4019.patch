Back-ported patch for upstream bug #48291.

Note that upstream bug #47780, while reported as part of the same CVE,
is an unrelated issue and appears not to exist in 5.0.77.


diff -Naur mysql-5.0.77.orig/mysql-test/r/select.result mysql-5.0.77/mysql-test/r/select.result
--- mysql-5.0.77.orig/mysql-test/r/select.result	2009-01-29 17:38:24.000000000 -0500
+++ mysql-5.0.77/mysql-test/r/select.result	2010-01-27 22:26:49.000000000 -0500
@@ -4388,4 +4388,16 @@
 1	abc	1
 1	def	2
 drop table t1, t2, t3;
+#
+# Bug #48291 : crash with row() operator,select into @var, and 
+#   subquery returning multiple rows
+#
+CREATE TABLE t1(a INT);
+INSERT INTO t1 VALUES (2),(3);
+# Should not crash
+SELECT 1 FROM t1 WHERE a <> 1 AND NOT
+ROW(a,a) <=> ROW((SELECT 1 FROM t1 WHERE 1=2),(SELECT 1 FROM t1))
+INTO @var0;
+ERROR 21000: Subquery returns more than 1 row
+DROP TABLE t1;
 End of 5.0 tests
diff -Naur mysql-5.0.77.orig/mysql-test/t/select.test mysql-5.0.77/mysql-test/t/select.test
--- mysql-5.0.77.orig/mysql-test/t/select.test	2009-01-29 17:38:00.000000000 -0500
+++ mysql-5.0.77/mysql-test/t/select.test	2010-01-27 22:26:06.000000000 -0500
@@ -3737,4 +3737,21 @@
 GROUP BY a.f3, cr.f4;
 
 drop table t1, t2, t3;
+
+--echo #
+--echo # Bug #48291 : crash with row() operator,select into @var, and 
+--echo #   subquery returning multiple rows
+--echo #
+
+CREATE TABLE t1(a INT);
+INSERT INTO t1 VALUES (2),(3);
+
+--echo # Should not crash
+--error ER_SUBQUERY_NO_1_ROW
+SELECT 1 FROM t1 WHERE a <> 1 AND NOT
+ROW(a,a) <=> ROW((SELECT 1 FROM t1 WHERE 1=2),(SELECT 1 FROM t1))
+INTO @var0;
+
+DROP TABLE t1;
+
 --echo End of 5.0 tests
diff -Naur mysql-5.0.77.orig/sql/sql_class.cc mysql-5.0.77/sql/sql_class.cc
--- mysql-5.0.77.orig/sql/sql_class.cc	2009-01-29 16:45:32.000000000 -0500
+++ mysql-5.0.77/sql/sql_class.cc	2010-01-27 22:23:51.000000000 -0500
@@ -2048,9 +2048,11 @@
     else
     {
       Item_func_set_user_var *suv= new Item_func_set_user_var(mv->s, item);
-      suv->fix_fields(thd, 0);
+      if (suv->fix_fields(thd, 0))
+        DBUG_RETURN (1);
       suv->check(0);
-      suv->update();
+      if (suv->update())
+        DBUG_RETURN (1);
     }
   }
   DBUG_RETURN(0);
diff -Naur mysql-5.0.77.orig/sql/sql_select.cc mysql-5.0.77/sql/sql_select.cc
--- mysql-5.0.77.orig/sql/sql_select.cc	2009-01-29 16:45:34.000000000 -0500
+++ mysql-5.0.77/sql/sql_select.cc	2010-01-27 22:21:46.000000000 -0500
@@ -10728,6 +10728,7 @@
   bool not_used_in_distinct=join_tab->not_used_in_distinct;
   ha_rows found_records=join->found_records;
   COND *select_cond= join_tab->select_cond;
+  bool select_cond_result= TRUE;
 
   if (error > 0 || (*report_error))				// Fatal error
     return NESTED_LOOP_ERROR;
@@ -10739,7 +10740,17 @@
     return NESTED_LOOP_KILLED;               /* purecov: inspected */
   }
   DBUG_PRINT("info", ("select cond 0x%lx", (ulong)select_cond));
-  if (!select_cond || select_cond->val_int())
+
+  if (select_cond)
+  {
+    select_cond_result= test(select_cond->val_int());
+
+    /* check for errors evaluating the condition */
+    if (join->thd->net.report_error)
+      return NESTED_LOOP_ERROR;
+  }
+
+  if (!select_cond || select_cond_result)
   {
     /*
       There is no select condition or the attached pushed down
